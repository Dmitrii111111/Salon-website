upstream innerdjango {
    server django-backend:8000;
}


server {
    listen 80; # port exposed to outside world. Needs to be opened in docker-compose.yml
    server_name queen-cosmo.ru www.queen-cosmo.ru;

    location / {
        return 301 https://$host$request_uri; # redirect all non https requests to https
        # where to redirect `/` requests
        # proxy_set_header Host $host;
        # proxy_pass http://innerdjango;
    }
    
    location /.well-known/acme-challenge/ { # <-- this section
        root /var/www/certbot;
        # let's encrypt asks for this location and needs to get the response from /var/www/certbot
        # generated by certbot and available to nginx via volumes
    }
}  
server {
    listen 443 ssl; # listen 443 port
    server_name queen-cosmo.ru;
    
    # location = /favicon.ico { access_log off; log_not_found off; }
    
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
    
    ssl_certificate /etc/letsencrypt/live/queen-cosmo.ru/fullchain.pem; # <-this
    ssl_certificate_key /etc/letsencrypt/live/queen-cosmo.ru/privkey.pem; # <-this
    
    location / {
        proxy_set_header Host $host;
        proxy_pass http://innerdjango; # pass these requests to internal upstream
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Proto https;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    location /static/ {
        root /var/www;
    }
    location /media/ {
        alias /var/www/media/;
    }
    
    location /robots.txt {
        alias /var/www/robots.txt;
    }
    location /favicon.svg {
        alias /var/www/favicon.svg;
    }
}
